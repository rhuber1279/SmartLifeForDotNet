<style type="text/css">
table.t1 td, th
    {
        height: 30px;
        white-space:normal;
        font-size: 14px;
        text-align: center;
        border-width: 0px 1px 1px 0px;
        border-style: solid solid solid solid;
    } 
    table.t2 
    {             
        border-bottom:1px; 
        border-bottom-style:solid;  
        border-right:1px; 
        border-right-style:solid; 
        background-color:#F5F5F5;
        }
    table.t2 td, th
    {
        height: 30px;
        white-space:normal;
        font-size: 14px;
        text-align: center;
        border-width: 1px 0px 0px 1px;
        border-style: solid solid solid solid;
    } 
    #caption
    {
        font-size: 25px;
        height: 50px;
        text-align: center;
        border-style: solid;
    }
    .td_background_color{ background-color:#F5F5F5}
</style>
<div>
    <div id="queryParam">
        <table style="width: 850px; margin-left: 20px; padding-top: 10px">
            <tbody>
                <tr>
                    <td width="150">
                        街道社区：
                        <input id="tree-AreaId" />
                        <input id="AreaId2" type="hidden" />
                        <input id="AreaId3" type="hidden" />
                    </td> 
                    <td width="200">
                        工单时间：
                     <!-- <input class="Wdate" id="CheckInTimeFrom" style="width:180px" onFocus="WdatePicker({dateFmt:'yyyy-MM-dd HH:mm'})"/>-->
                        <input class="Wdate" id="CheckInTimeFrom" style="width: 110px" onfocus="var CheckInTimeTo=$dp.$('CheckInTimeTo');WdatePicker({onpicked:function(){CheckInTimeTo.focus();},dateFmt:'yyyy-MM-dd',maxDate:'#F{$dp.$D(\'CheckInTimeTo\')}'})" />
                    到：<!--<input class="easyui-datebox" id="CheckInTimeTo" style="width:180px;" />-->
                        <input class="Wdate" id="CheckInTimeTo" style="width: 110px" onfocus="WdatePicker({dateFmt:'yyyy-MM-dd',minDate:'#F{$dp.$D(\'CheckInTimeFrom\')}'})" />
                    </td> 
                    <td width="80">
                     月份：
                        <a href="javascript:void(0)" class="easyui-linkbutton"
                        iconcls="icon-prev" plain="true" onclick="passMonth('Last')"> </a> <a href="javascript:void(0)"
                            class="easyui-linkbutton" iconcls="icon-next" plain="true" onclick="passMonth('Next')">
                             </a>
                    </td>
                    <td width="30">
                        <button onclick="query();">
                            查询</button>
                    </td>
                    <td width="30">
                        <button onclick="reset();">
                            重置</button>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
    <div id="caption" style="width: 99%; text-align: center; line-height: 51px">
        服务时长统计</div>
    <!--<div id="thead" style="border:1px solid;width:1020px;margin-right:auto;margin-left:auto;border-bottom:none"></div>-->
    <div id="alltable" style="width: 99%; margin-right: 20px; position: relative; ">
        <table id="dataTable_head"    class="t2"  ></table>
        <div id="dataTable" style="float: left; width: 100%; overflow-x: auto; overflow-y: auto;
            white-space: nowrap; ">
        </div>
        <table id="dataTable_bottom" class="t2"  ></table>
    </div>
</div>
<script type="text/javascript">
    var info;
    streets = [];
    times = [];

    $(function () {
        loadfiles([ 
        { type: "js", url: "../../script/old-care/aid.js" }
        ], function () {
            initTree('easyUIComboTree', 'tree-AreaId', {
                width: 140,
                panelWidth: 200,
                panelHeight: 260,
                required: false,
                editable: false,
                onSelect: function (treeNode) {
                    var areaId;
                    var treeNodeId = treeNode.id; //当前节点的层次
                    if (treeNodeId.length > 6) {
                        var sub_id = treeNodeId.substring(14, 18);
                        if (sub_id == '0000') {
                            $("#AreaId2").val(treeNodeId);
                            $("#AreaId3").val(null);
                        }
                        else {
                            $("#AreaId2").val(treeNode.attributes.PId);
                            $("#AreaId3").val(treeNodeId);
                        }
                    }
                    else {
                        $("#AreaId2").val(null);
                        $("#AreaId3").val(null);
                    }
                    startdate();
                },
                onLoadSuccess: function () {
                    //默认展开一级
                    var node = $('#tree-AreaId').combotree('tree').tree('getRoot');
                    $('#tree-AreaId').combotree('tree').tree("collapseAll");
                    $('#tree-AreaId').combotree('tree').tree('expand', node.target);

                    var node_Children = $('#tree-AreaId').combotree('tree').tree('getChildren'); //取所有的节点
                    var rows = [];
                    _.each(node_Children, function (o) {
                        if (o.attributes.EndFlag == '1' && o.attributes.PId.length > 5) {
                            rows.push(o); //取所有的社区
                        }
                    });
                    if (rows.length > 1) {//社区大于一个  为街道权限，默认设置第一个社区所在的街道
                        $('#tree-AreaId').combotree('setValue', rows[0].attributes.PId);
                        $("#AreaId2").val(rows[0].attributes.PId);
                    }
                    else if (rows.length == 1) {//只有一个社区  为社区权限 ，默认设置社区
                        $('#tree-AreaId').combotree('setValue', rows[0].id);
                        $('#tree-AreaId').combotree('disable');
                        $("#AreaId3").val(rows[0].id);
                    }
                    else {
                        alert('没有任何权限');
                    }
                    startdate();
                    query();
                }
            },
         function (d) {
             var res;
             postTo(baseCMSInvokeUrl + "/Bas/ResidentBaseInfoService/isSuperAdmin/" + top.window.gUserId, null, function (result) {
                 res = result;
             }, { async: false })
             if (res) {
                 getTreeData('01$01$02', "OrderNo asc", '{"DictionaryId":"00005" , "ItemId":"' + (top.objectId == '*' ? '00000' : top.appDeployArea.id) + '"}', d);
             } else {
                 getTreeData('01$02$01', "OrderNo asc", '{"DictionaryId":"00005" , "ItemId":"' + (top.objectId == '*' ? '00000' : top.appDeployArea.id) + '" , "UserId":"' + top.window.gUserId + '"}', d);
             }
         });
            _autosize();
        });
    });

    //清空
    function reset() {
        var node_Children = $('#tree-AreaId').combotree('tree').tree('getChildren'); //取所有的节点
        var rows = [];
        _.each(node_Children, function (o) {
            if (o.attributes.EndFlag == '1' && o.attributes.PId.length > 5) {
                rows.push(o); //取所有的社区
            }
        });
        if (rows.length > 1) {//社区大于一个  为街道权限，默认设置第一个社区所在的街道
            $('#tree-AreaId').combotree('setValue', rows[0].attributes.PId);
            $("#AreaId2").val(rows[0].attributes.PId);
        }
        else if (rows.length == 1) {//只有一个社区  为社区权限 ，默认设置社区
            $('#tree-AreaId').combotree('setValue', rows[0].id);
            $('#tree-AreaId').combotree('disable');
            $("#AreaId3").val(rows[0].id);
        }
        else {
            alert('没有任何权限');
        }
        startdate();
    }

    //查询方法   查询条件放入隐藏域 
    function query() {
        var checkInTimeF = $("#CheckInTimeFrom").val();
        var checkInTimeT = $("#CheckInTimeTo").val();
        var areaId2 = $("#AreaId2").val();
        var areaId3 = $("#AreaId3").val();

        var queryParams = { BeginTime: checkInTimeF, EndTime: checkInTimeT, Param3: areaId2, Param4: areaId3, type: 1 };
        //获取表头及内容
        getAll([baseCMSInvokeUrl + '/Pub/ReportService/GetServiceForHour/' + $.toJSON(queryParams),
                baseCMSInvokeUrl + '/Pub/ReportService/GetServiceForHour/' + $.toJSON(_.extend(queryParams, { type: 4 })),
                ],
                function (headbody, bottom) {
                    var headbodys = _.map(headbody.rows, function (o) {
                        return xml2json.parser(o, 'StringObjectDictionary');
                    });
                    var bottoms = _.map(bottom.rows, function (o) {
                        return xml2json.parser(o, 'StringObjectDictionary');
                    });

                    createTable(headbodys, bottoms);
                });
    }

    //-----------------------------------------------------------------创建表格

    function createTable(headBodys, botms) {
        var heads = _.first(headBodys); //取出头
        //var bodys = _.difference(headBodys, heads); //取出内容
        var bodys = _.sortBy(_.difference(headBodys, heads), function (i) {
            return i.C0;
        });    //取出内容并排序
//        var bodys = _.sortBy(bodys, function (i) {
//            return i.C1;
//        });  
        var bottoms = _.last(botms);    //取出小结

        var htmls = [];
        var htmls_head = [];
        var htmls_bottom = [];
        //填充头  表头  显示部分
        var iHead = 0;
        htmls_head.push('<tr>')
        for (var item in heads) {
            if (item.toString().indexOf("C") > -1) {
                if (item.toString() == "C0" || item.toString() == "C1" ) {
                    htmls_head.push('<th style="height:45px; width:120px;" align="center">' + heads[item] + '</th>');
                }
                else if (item.toString() == "C2") {
                    htmls_head.push('<th style="height:45px; width:80px;" align="center">' + heads[item] + '</th>');
                }
                else {
                    htmls_head.push('<th style="height:45px; width:100px;" align="center">' + heads[item] + '</th>');
                }
//                htmls_head.push('<th style="height:45px;" align="center">' + heads[item] + '</th>');
                iHead++;
            }
        }
        htmls_head.push("</tr>");
        //填充头  隐藏部分
        var iHead = 0;
        htmls.push('<table id="dataTable_body" style="border-left:1px; border-left-style:solid;"  class="t1" ><tr style="display:none">')
        for (var item in heads) {
            if (item.toString().indexOf("C") > -1) {
                if (item.toString() == "C0" || item.toString() == "C1") {
                    htmls.push('<th style="height:45px; width:120px;" align="center">' + heads[item] + '</th>');
                }
                else if (item.toString() == "C2") {
                    htmls.push('<th style="height:45px; width:80px;" align="center">' + heads[item] + '</th>');
                }
                else {
                    htmls.push('<th style="height:45px;  width:100px;" align="center">' + heads[item] + '</th>');
                }
                //                htmls.push('<th style="height:45px;" align="center">' + heads[item] + '</th>');
                iHead++;
            }
        }
        htmls.push("</tr>");
        //填充数据
        var rsC0, rsC1;
        var ifindC0, ifindC1;   //合并数，分别为社区，商家
        _.each(bodys, function (o) {
            if (rsC0 != o.C0) {
                rsC0 = o.C0;
                ifindC0 = _.countBy(bodys, function (x) { return x.C0 == rsC0 ? 'count' : 'ncount'; }).count;
            }
            if (rsC1 != o.C1) {
                rsC1 = o.C1;
                ifindC1 = _.countBy(bodys, function (y) { if (y.C0 == rsC0) { return y.C1 == rsC1 ? 'count' : 'ncount'; } }).count;
            }

            htmls.push('<tr>');
            for (var item in o) {
                if (item.toString().indexOf("C") > -1) {
                    if (item == "C0") {
                        if (ifindC0 > 0) {
                            htmls.push('<td align="center" height="30" class="td_background_color" width="120" rowspan="' + ifindC0 + '" >' + (o[item] ? o[item] : 0) + '</td>');
                        }
                    }
                    else if (item == "C1") {
                        if (ifindC1 > 0) {
                            htmls.push('<td align="center" height="30" class="td_background_color" width="120" rowspan="' + ifindC1 + '" >' + (o[item] ? o[item] : 0) + '</td>');
                        }
                    }
                    else {
                        if (item == "C2") {
                            htmls.push('<td align="center" height="30"  width="80">' + (o[item] ? o[item] : 0) + '</td>');
                        }
                        else {
                            htmls.push('<td align="center" height="30"  width="100">' + (o[item] ? o[item] : 0) + '</td>');
                        }
                    }
                }
            }
            htmls.push('</tr>');

            ifindC0 = 0;
            ifindC1 = 0;
        });

        //填充尾部小结
        var ibottoms = 0;
        var htm = [];
        for (var item in bottoms) {
            if (item.toString().indexOf("C") > -1) {
                htm.push('<td align="center"  height="30"  width="100" >' + (bottoms[item] ? bottoms[item] : 0) + '</td>');
                ibottoms++;
            }
        }
        //有滚动条时 尾部小结隐藏部分
        htmls.push('<tr id="dataTable_count" class="td_background_color"><td align="center" height="30"  width="320" colspan="' + (iHead - ibottoms) + '">合计</td>');
        htmls.push(htm.join(""));
        htmls.push('</tr>');
        htmls.push("</table>")
        //有滚动条时  尾部小结显示部分
        htmls_bottom.push('<tr><td align="center" height="30"  width="320" colspan="' + (iHead - ibottoms) + '">合计</td>');
        htmls_bottom.push(htm.join(""));

        $('#dataTable_head').html(htmls_head.join(""));
        $('#dataTable').html(htmls.join(""));
        $('#dataTable_bottom').html(htmls_bottom.join(""));

        setStyle();//调整样式
    }

    //时间控件初始化
    function startdate() {
        var today = new Date();
        cdateT = getDate(0, 0, 0, today);
        cdateF = getDate_f(0, 0, 0, today);
        $('#CheckInTimeFrom').val(cdateF);
        $('#CheckInTimeTo').val(cdateT);
    }

    function passMonth(LastOrNext) {
        var dt = Date.parse($('#CheckInTimeFrom').val()); //取当前时间控件的日期
        var d;
        if (LastOrNext == 'Last') {//判断是上个月还是下个月
            d = Date.getDateOfPreMonth(dt); //上个月月初
        }
        else {
            d = Date.getDateOfNextMonth(dt); //下个月月初
        }
        cdateF = getDate_f(0, 0, 0, d);
        $('#CheckInTimeFrom').val(cdateF);

        d = Date.getDateOfNextMonth(d);//根据月初日期，取到下个月月初第一天
        d.setTime(d.getTime() - 24 * 60 * 60 * 1000); //下个月月初第一天减去一天，得到月末
        var s = d.getFullYear() + "-" + (d.getMonth() + 1) + "-" + d.getDate();
        $('#CheckInTimeTo').val(s);
    }

    Date.getDayOfMonth = function (y, Mm) {  
    if (typeof y == 'undefined') { y = (new Date()).getFullYear(); }  
    if (typeof Mm == 'undefined') { Mm = (new Date()).getMonth(); }  
    var Feb = (y % 4 == 0) ? 29 : 28;  
    var aM = new Array(31, Feb, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31);  
    return  aM[Mm];  
};  
    Date.getDateOfPreMonth = function (dt) {  
    if (typeof dt == 'undefined') { dt = (new Date()); }  
    var y = (dt.getMonth() == 0) ? (dt.getFullYear() - 1) : dt.getFullYear();  
    var m = (dt.getMonth() == 0) ? 11 : dt.getMonth() - 1;  
    var preM = Date.getDayOfMonth (y, m); 
    var d = (preM < dt.getDate()) ? preM : dt.getDate();  
    return new Date(y, m, d);  
};
Date.getDateOfNextMonth = function (dt) {
    if (typeof dt == 'undefined') { dt = (new Date()); }
    var y = (dt.getMonth() == 11) ? (dt.getFullYear() + 1) : dt.getFullYear();
    var m = (dt.getMonth() == 11) ? 0 : dt.getMonth() + 1;
    var preM = Date.getDayOfMonth(y, m);
    var d = (preM < dt.getDate()) ? preM : dt.getDate();
    return new Date(y, m, d);
};  
    //得到day拼接日期
    function getDate(year, month, day, time) {
        var y = time.getFullYear() + year;
        var m = time.getMonth() + month + 1;
        var d = time.getDate() + day;

        var monthday = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]
        if ((y % 400 == 0) || (y % 4 == 0) && (y % 100 != 0)) {
            monthday[2] = 29;
        }

        if (d > monthday[m - 1]) {
            m++;
            d = 1;
        } else if (d - day <= 0) {
            m--;
            if (m <= 0) {
                y--;
                m = 12;
            }
            d = monthday[m - 1];
        }
        if (m > 12) {
            y++;
            m = 1;
        }
        if (m <= 9) m = "0" + m;
        if (d <= 9) d = "0" + d;
        var cdate = y + "-" + m + "-" + d;
        return cdate;
    }
    //得到day拼接日期(每月第一天)
    function getDate_f(year, month, day, time) {
        var y = time.getFullYear() + year;
        var m = time.getMonth() + month + 1;
        var d = "01";

        var monthday = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]
        if ((y % 400 == 0) || (y % 4 == 0) && (y % 100 != 0)) {
            monthday[2] = 29;
        }

        if (m <= 9) m = "0" + m;
        var cdate = y + "-" + m + "-" + d;
        return cdate;
    }

    function setStyle() {

        $("#dataTable").scrollTop(10);  //操作滚动条
        $('#dataTable_head').width($('#dataTable_body').width()); //有滚动条时 设置表头宽度
        $('#dataTable_bottom').width($('#dataTable_body').width()); //有滚动条时 设置总结宽度
        if ($("#dataTable").scrollTop() > 0) {
            $('#dataTable_head').css({ "float": "left", "dispaly": "block" }); //有滚动条时 设置表头左靠齐
            $('#dataTable_bottom').css({ "float": "left", "dispaly": "block" });  //有滚动条时 设置总结左靠齐
            $('#dataTable_bottom').css({ "display": "inline" }); //有滚动条时 设置总结浮动部分显示
            $('#dataTable_count').css({ "display": "none" }); //有滚动条时 设置总结整体部分隐藏
        }
        else {
            $('#dataTable_head').css({ "float": "left", "dispaly": "block" }); //无滚动条时 设置表头居中
            $('#dataTable_bottom').css({ "float": "left", "dispaly": "block" }); //无滚动条时 设置总结居中
            $('#dataTable_bottom').css({ "display": "none" }); //无滚动条时 设置总结浮动部分隐藏
            $('#dataTable_count').css({ "display": "inline" }); //无滚动条时 设置总结整体部分显示
        }
        $("#dataTable").scrollTop(0);   //滚动条返回顶部

    }

    function _autosize() {
        var delta = $("#caption").height() + $("#queryParam").height() + 100;
        $("#dataTable").height($("#alltable").parent().parent().parent().parent().height() - delta);
    }

</script>
