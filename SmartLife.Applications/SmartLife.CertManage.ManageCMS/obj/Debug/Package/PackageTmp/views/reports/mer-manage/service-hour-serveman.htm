<style type="text/css">
table.t1 td, th
    {
        height: 30px;
        white-space:normal;
        font-size: 14px;
        text-align: center;
        border-width: 0px 1px 1px 0px;
        border-style: solid solid solid solid;
    } 
    #caption
    {
        font-size: 25px;
        height: 50px;
        text-align: center;
        border-style: solid;
    }
    .td_background_color{ background-color:#F5F5F5}
</style>
<div>
    <div id="queryParam">
        <table style="width: 850px; margin-left: 20px; padding-top: 10px">
            <tbody>
                <tr>
                    <td width="150">
                        服务人员：
                        <input id="NameAndIDNo" />
                        <input id="ServeManId"  type="hidden" />
                        <input id="ServeManName" name="ServeManName"  type="hidden" />
                    </td> 
                    <td width="200">
                        工单时间：
                        <!-- <input class="Wdate" id="CheckInTimeFrom" style="width:180px" onFocus="WdatePicker({dateFmt:'yyyy-MM-dd HH:mm'})"/>-->
                        <input class="Wdate" id="CheckInTimeFrom" style="width: 110px" onfocus="var CheckInTimeTo=$dp.$('CheckInTimeTo');WdatePicker({onpicked:function(){CheckInTimeTo.focus();},dateFmt:'yyyy-MM-dd',maxDate:'#F{$dp.$D(\'CheckInTimeTo\')}'})" />
                        到：<!--<input class="easyui-datebox" id="CheckInTimeTo" style="width:180px;" />-->
                        <input class="Wdate" id="CheckInTimeTo" style="width: 110px" onfocus="WdatePicker({dateFmt:'yyyy-MM-dd',minDate:'#F{$dp.$D(\'CheckInTimeFrom\')}'})" />
                    </td> 
                    <td width="80">
                     月份：
                        <a href="javascript:void(0)" class="easyui-linkbutton"
                        iconcls="icon-prev" plain="true" onclick="passMonth('Last')"> </a> <a href="javascript:void(0)"
                            class="easyui-linkbutton" iconcls="icon-next" plain="true" onclick="passMonth('Next')">
                             </a>
                    </td>
                    <td width="30">
                        <button onclick="query();">
                            查询</button>
                    </td>
                    <td width="30">
                        <button onclick="reset();">
                            重置</button>
                    </td> 
                </tr>
                <tr>
                    <td  colspan="5">
                        <div id="CurrentMerchant-c" style="display: inline-block;">
                            <input id="CurrentMerchant" /></div>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
    <div id="caption" style="width: 99%; text-align: center; line-height: 51px">
        服务时长统计</div>
    <!--<div id="thead" style="border:1px solid;width:1020px;margin-right:auto;margin-left:auto;border-bottom:none"></div>-->
     <div id="alltable" style="width: 99%; margin-right: 20px; position: relative;">
        <div id="dataTable" style="float: left; width: 100%; overflow-x: auto; overflow-y: auto;
            white-space: nowrap;   position: absolute;">
        </div>
    </div>
</div>
<script type="text/javascript">
    var info;
    streets = [];
    times = [];

    $(function () {
        loadfiles([ 
        ], function () {
            //加载商家
            $('#CurrentMerchant').combobox({
                width: 140,
                panelWidth: 200,
                data: top.gUserInfo.MappingMerchants,
                valueField: 'StationId',
                textField: 'StationName',
                editable: true,
                onSelect: function (record) {
                    startdate();
                    query();
                },
                onLoadSuccess: function () {
                    startdate();
                    if (top.gUserInfo.MappingMerchants.length > 0) {
                        $('#CurrentMerchant').combobox('setValue', top.gUserInfo.MappingMerchants[0].StationId);

                        if (top.gUserInfo.MappingMerchants.length == 1) {
                            $('#CurrentMerchant-c').hide();
                            $('#CurrentMerchant-cc').width(190);
                        }
                    }
                    else {
                        alertInfo('当前帐号没有绑定任何商家');
                        $('#toolbar-Schedule').hide();
                    }
                    query();
                }
            });
            var areas;
            //加载服务人员
            $('#NameAndIDNo').combogrid({
                delay: 500,
                width: 150,
                panelWidth: 190,
                panelHeight: 240,
                mode: 'local',
                data: areas,
                idField: 'UserId',
                textField: 'UserName',
                //过滤
                onChange: function (newValue, oldValue) {
                    if ($.trim(newValue) && ($.trim(newValue) == $.trim($('#NameAndIDNo').combobox("getText")))) {
                        //                                alert($.trim(newValue));
                        var queryParams = {
                            sort: 'UserName',
                            order: 'asc',
                            page: '1',
                            rows: '20',
                            instance: {
                                UserType: window.contants.UserTypeAsMerchant,
                                UserName: $.trim(newValue)
                            }
                        };
                        var stationId = $('#CurrentMerchant').combobox('getValue');
                        postTo(baseCMSInvokeUrl + '/Pub/ServiceStationService/ListServeManForInput/' + window.contants.GuidAsGroup_MerchantServeMan + ',' + stationId, $.toJSON(queryParams), function (ret) {
//                                                                                                    alert($.toJSON(ret));
                            $('#NameAndIDNo').combogrid("grid").datagrid("loadData", ret);
                        });
                    }
                },
                filter: function (q, row) {
                    return row["UserName"].indexOf(q) != -1 || row["UserCode"].indexOf(q) != -1;
                },
                columns: [[
                                        { field: 'UserName', title: '姓名', width: 50, sortable: true },
                                        { field: 'Gender', title: '性别', width: 35, sortable: true, formatter: easyuigrid_genderFormatter },
                                        { field: 'UserCode', title: '工号', width: 100, sortable: true }
                                    ]],
                //姓名选择为空的时候    清除表单中的所以内容
                onHidePanel: function () {
                    if ($('#NameAndIDNo').combo('getText') == "") {
                        $('#ServeManId').val(null);
                        $('#ServeManName').val(null);
                    }
                },
                //选择一个老人之后   把老人的基本信息都填入表单
                onCheck: function (index, record) {
                    $('#ServeManId').val(record.UserId);
                    $('#ServeManName').val(record.UserName);
                }
            });
        });

        _autosize();
    });


    //清空
    function reset() {
        startdate();
        $("#ServeManId").val(null);
        $("#ServeManName").val(null);
        $('#NameAndIDNo').combogrid('clear');

    }

    //查询方法   查询条件放入隐藏域 
    function query() {
        var checkInTimeF = $("#CheckInTimeFrom").val();
        var checkInTimeT = $("#CheckInTimeTo").val();
        var serviceStationId = $('#CurrentMerchant').combobox('getValue');
        var serveManId = $('#ServeManId').val();
        var queryParams = { BeginTime: checkInTimeF, EndTime: checkInTimeT, Param3: serviceStationId, Param4: serveManId, type: 'body' };
        //获取表头及内容
        getAll([baseCMSInvokeUrl + '/Pub/ReportService/GetServiceForHourToServeMan/' + $.toJSON(queryParams),
                baseCMSInvokeUrl + '/Pub/ReportService/GetServiceForHourToServeMan/' + $.toJSON(_.extend(queryParams, { type: 'total' })),
                ],
                function (headbody, bottom) {
                    var headbodys = _.map(headbody.rows, function (o) {
                        return xml2json.parser(o, 'StringObjectDictionary');
                    });
                    var bottoms = _.map(bottom.rows, function (o) {
                        return xml2json.parser(o, 'StringObjectDictionary');
                    });
                    createTable(headbodys, bottoms);
                });
    }

    //-----------------------------------------------------------------创建表格

    function createTable(headBodys, botms) {
        var heads = _.first(headBodys); //取出头
        var bodys = _.sortBy(_.difference(headBodys, heads), function (i) {
            return i.C0;
        });   //取出内容并排序

        var bottoms = _.last(botms);    //取出小结

        var htmls = [];
        //填充头
        var iHead = 0;
        htmls.push("<table  style='margin:0 auto 0 auto;border-left:1px; border-left-style:solid;border-top:1px; border-top-style:solid;'  class='t1'><tr>")
        for (var item in heads) {
            if (item.toString().indexOf("C") > -1) {
                if (item.toString() == "C0") {
                    htmls.push('<th style="height:45px; width:120px;"  class="td_background_color" align="center">' + heads[item] + '</th>');
                }
                else if (item.toString() == "C1") {
                    htmls.push('<th style="height:45px; width:80px;"  class="td_background_color" align="center">' + heads[item] + '</th>');
                }
                else {
                    htmls.push('<th style="height:45px; width:100px;" class="td_background_color" align="center">' + heads[item] + '</th>');
                }
//                htmls.push('<th style="height:45px;" align="center">' + heads[item] + '</th>');
                iHead++;
            }
        }
        htmls.push("</tr>");

        //填充数据
        var rsC0;
        var ifindC0;   //合并数，分别为社区
        _.each(bodys, function (o) {
            if (rsC0 != o.C0) {
                rsC0 = o.C0;
                ifindC0 = _.countBy(bodys, function (x) { return x.C0 == rsC0 ? 'count' : 'ncount'; }).count;
            }

            htmls.push('<tr>');
            for (var item in o) {
                if (item.toString().indexOf("C") > -1) {
                    if (item == "C0") {
                        if (ifindC0 > 0) {
                            htmls.push('<td align="center"  class="td_background_color" height="30" width="120"; rowspan="' + ifindC0 + '" >' + (o[item] ? o[item] : 0) + '</td>');
                        }
                    }
                    else if (item == "C1") {
                        htmls.push('<td align="center"  height="30" width="80">' + (o[item] ? o[item] : 0) + '</td>');
                    }
                    else {
                        htmls.push('<td align="center" height="30"  width="100">' + (o[item] ? o[item] : 0) + '</td>');
                    }
                }
            }
            htmls.push('</tr>');

            ifindC0 = 0;
        });

        //填充尾部小结
        var ibottoms = 0;
        var htm = [];
        for (var item in bottoms) {
            if (item.toString().indexOf("C") > -1) {
                htm.push('<td align="center" height="30" class="td_background_color" width="100">' + (bottoms[item] ? bottoms[item] : 0) + '</td>');
                ibottoms++;
            }
        }
        htmls.push('<tr><td align="center" height="30"  class="td_background_color" width="200" colspan="' + (iHead - ibottoms) + '">合计</td>');
        htmls.push(htm.join(""));
        htmls.push('</tr>');
        htmls.push("</table>");
        $('#dataTable').html(htmls.join(""));
    }

    //时间控件初始化
    function startdate() {
        var today = new Date();
        cdateT = getDate(0, 0, 0, today);
        cdateF = getDate_f(0, 0, 0, today);
        $('#CheckInTimeFrom').val(cdateF);
        $('#CheckInTimeTo').val(cdateT);
    }

    function passMonth(LastOrNext) {
        var dt = Date.parse($('#CheckInTimeFrom').val()); //取当前时间控件的日期
        var d;
        if (LastOrNext == 'Last') {//判断是上个月还是下个月
            d = Date.getDateOfPreMonth(dt); //上个月月初
        }
        else {
            d = Date.getDateOfNextMonth(dt); //下个月月初
        }
        cdateF = getDate_f(0, 0, 0, d);
        $('#CheckInTimeFrom').val(cdateF);

        d = Date.getDateOfNextMonth(d); //根据月初日期，取到下个月月初第一天
        d.setTime(d.getTime() - 24 * 60 * 60 * 1000); //下个月月初第一天减去一天，得到月末
        var s = d.getFullYear() + "-" + (d.getMonth() + 1) + "-" + d.getDate();
        $('#CheckInTimeTo').val(s);
    }

    Date.getDayOfMonth = function (y, Mm) {
        if (typeof y == 'undefined') { y = (new Date()).getFullYear(); }
        if (typeof Mm == 'undefined') { Mm = (new Date()).getMonth(); }
        var Feb = (y % 4 == 0) ? 29 : 28;
        var aM = new Array(31, Feb, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31);
        return aM[Mm];
    };
    Date.getDateOfPreMonth = function (dt) {
        if (typeof dt == 'undefined') { dt = (new Date()); }
        var y = (dt.getMonth() == 0) ? (dt.getFullYear() - 1) : dt.getFullYear();
        var m = (dt.getMonth() == 0) ? 11 : dt.getMonth() - 1;
        var preM = Date.getDayOfMonth(y, m);
        var d = (preM < dt.getDate()) ? preM : dt.getDate();
        return new Date(y, m, d);
    };
    Date.getDateOfNextMonth = function (dt) {
        if (typeof dt == 'undefined') { dt = (new Date()); }
        var y = (dt.getMonth() == 11) ? (dt.getFullYear() + 1) : dt.getFullYear();
        var m = (dt.getMonth() == 11) ? 0 : dt.getMonth() + 1;
        var preM = Date.getDayOfMonth(y, m);
        var d = (preM < dt.getDate()) ? preM : dt.getDate();
        return new Date(y, m, d);
    };  
    //得到day拼接日期
    function getDate(year, month, day, time) {
        var y = time.getFullYear() + year;
        var m = time.getMonth() + month + 1;
        var d = time.getDate() + day;

        var monthday = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]
        if ((y % 400 == 0) || (y % 4 == 0) && (y % 100 != 0)) {
            monthday[2] = 29;
        }

        if (d > monthday[m - 1]) {
            m++;
            d = 1;
        } else if (d - day <= 0) {
            m--;
            if (m <= 0) {
                y--;
                m = 12;
            }
            d = monthday[m - 1];
        }
        if (m > 12) {
            y++;
            m = 1;
        }
        if (m <= 9) m = "0" + m;
        if (d <= 9) d = "0" + d;
        var cdate = y + "-" + m + "-" + d;
        return cdate;
    }
    //得到day拼接日期(每月第一天)
    function getDate_f(year, month, day, time) {
        var y = time.getFullYear() + year;
        var m = time.getMonth() + month + 1;
        var d = "01";

        var monthday = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]
        if ((y % 400 == 0) || (y % 4 == 0) && (y % 100 != 0)) {
            monthday[2] = 29;
        }

        if (m <= 9) m = "0" + m;
        var cdate = y + "-" + m + "-" + d;
        return cdate;
    }
    function _autosize() {
        var delta = $("#caption").height() + $("#queryParam").height() + 10;
        $("#dataTable").height($("#alltable").parent().parent().parent().parent().height() - delta);
    }
</script>
