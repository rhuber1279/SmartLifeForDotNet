<div id="toolbar-B132004">
    <div id="CurrentAgencys-c" style="display: inline-block;"><input id="CurrentAgencys" /></div>
    <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-tip" plain="true" onclick="SendNoticeMsg()">发送</a>
</div>
<table id="dg-B132004" >
</table>
<div id="dlg-B132004" class="easyui-dialog" style="width: 320px; height: 400px; padding: 10px;"
 closed="true" cache="false" buttons="#btn-B132004"  >
    <div class="ftitle"></div>
    <form id="fm-B132004" method="post" novalidate>
    <input type="hidden" name="Id" id="Id-B132004" />
    <div class="fitem">
        <label>设备名称:</label>
        <input id="StationDevices" class="easyui-validatebox" />
    </div>
    <div class="fitem">
        <input type="hidden" name="BeginTime" id="BeginSendTime"/>
        <label>截止时间:</label>
        <input name="EndTime" id="lostEndTime" class="Wdate" onfocus="WdatePicker({isShowClear:false,readOnly:true,dateFmt:'yyyy-MM-dd HH:mm:ss'})" style="width: 195px; border-left: none; border-right: none; border-top: none;" />
    </div>
    <div class="fitem">
        <label>通知位置:</label>
        <input id="NoticePosition-home" type="radio" name="NoticePosition" value="home"/><label for="NoticePosition-home">通知栏</label>
        <input id="NoticePosition-agedclassroom" type="radio" name="NoticePosition" value="agedclassroom"/><label for="NoticePosition-agedclassroom">老人大学通知</label>
    </div>
    <div class="fitem">
        <label>通知内容:</label>
        <textarea name="NoticeContent" rows="8" style=" height:180px; width:195px;" ></textarea>
    </div>
    </form>
</div>
<div id="btn-B132004">
    <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" onclick="SendMsgSave()"> 确定</a>
    <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" onclick="SendMsgCancel()">取消</a>
</div>

<script type="text/javascript">
    var stationId;
    var stationDevices;
    $(function () {
        models[currentMenuCode] = {
            gridId: 'dg-' + currentMenuCode,
            toolbarId: 'toolbar-' + currentMenuCode,
            dialogId: 'dlg-' + currentMenuCode,
            formId: 'fm-' + currentMenuCode,
            dlgSearchId: 'dlg-search-' + currentMenuCode,
            fmSearchId: 'fm-search-' + currentMenuCode,
            fmSearchRoughId: 'fm-search-rough-' + currentMenuCode,
            btnSearchId: 'btn-search-' + currentMenuCode,
            buttonId: 'btn-' + currentMenuCode,
            pkId: 'Id-' + currentMenuCode,
            pk: 'Id',
            getPKValueWhenAdd: function () {
                return -1;
            },
            uiMode: 'list',
            entityName: '设备通知',
            baseModelUrl: baseCMSInvokeUrl + '/Pam/DeviceMsgNoticeService/',
            defaultModel: { Status: 1, NoticeType: 'home' }
        };

        autosize(models[currentMenuCode].gridId);

        //加载日照
        $('#CurrentAgencys').combobox({
            width: 180,
            panelWidth: 300,
            data: top.gUserInfo.MappingAgencys,
            valueField: 'StationId',
            textField: 'StationName',
            editable: false,
            onLoadSuccess: function () {
                if (top.gUserInfo.MappingAgencys.length > 0) {
                    $('#CurrentAgencys').combobox('setValue', top.gUserInfo.MappingAgencys[0].StationId);

                    if (top.gUserInfo.MappingAgencys.length == 1) {
                        $('#CurrentAgencys-c').hide();
                        $('#CurrentAgencys-cc').width(190);
                    }
                    //loading();    //会二次加载
                }
                else {
                    alertInfo('当前帐号没有绑定任何机构');
                    $('#toolbar-CourseSchedule').hide();
                }
            },
            onSelect: function (record) {
                loading();
            }
        });
        loading();


        $('#StationDevices').combobox({
            width: 200,
            panelWidth: 200,
            data: null,
            valueField: 'DeviceId',
            textField: 'DeviceName',
            multiple: true,
            editable: false
        });
    });

    //加载数据
    function loading() {
        stationId = $('#CurrentAgencys').combobox('getValue');

        $('#' + models[currentMenuCode].gridId).datagrid(easyuigrid_settings({
            title: "",
            pagination: true,
            rownumbers: true,
            singleSelect: true,
            url: models[currentMenuCode].baseModelUrl + 'ListForEasyUIgridPage',
            method: 'POST',
            toolbar: '#' + models[currentMenuCode].toolbarId,
            queryParams: {
                sort: 'isnull(a.OperatedOn,a.CheckInTime)',
                order: 'desc',
                filterFields: [
                    { key: 'StationId', value: stationId },
                    { key: 'Status', value: models[currentMenuCode].defaultModel.Status }
                ]
            },
            onDblClickRow: function (idx, row) {
                SendNoticeMsg(row);
            },
            columns: [[
        { field: 'Id', title: '通知编号', width: 150, hidden: true },
        { field: 'CK', title: '', checkbox: true },
        { field: 'DeviceName', title: '设备名称', width: 200, align: 'center', formatter: function (val) { var dName = val.toString().split("-"); if (dName.length > 2) { return dName[2]; } else { return val.toString(); } } },
        { field: 'NoticePosition', title: '通知位置', width: 120, align: 'center', formatter: function (val) { return val == "home" ? "通知栏" : "老人大学通知栏" } },
        { field: 'NoticeType', title: '通知类型', width: 80, align: 'center', formatter: function (val) { return val == "text" ? "文本" : "其他" } },
        { field: 'EndTime', title: '过期时间', width: 135, align: 'center', formatter: easyuigrid_dateFormatter, datefmt: "yyyy-MM-dd HH:mm:ss" },
        { field: 'NoticeContent', title: '通知内容', width: 500, align: 'left' }
        ]],
            loader: easyuiLoaderForStringObjectDictionary
        })).datagrid('getPager').pagination({ displayMsg: '显示 第 {from} 到 {to} 共 {total} 条' });


        //加载当前机构下所有设备
        getTo(baseCMSInvokeUrl + '/Pub/DeviceService/QueryOrgDevice?parms=' + $.toJSON({ StationId: stationId, Satus: 1, DeviceType: '00012', 'OrderByClause': ' a.CheckInTime desc' }), null, function (ret) {
            if (ret.Success && ret.rows) {
                stationDevices = _.map(ret.rows, function (o) {
                    return xml2json.parser(o, 'StringObjectDictionary');
                });

                var orgDevices = _.map(stationDevices, function (o) {
                    var strDeviceNames = o.DeviceName.split('-');
                    return { DeviceId: o.DeviceId, DeviceName: (strDeviceNames.length > 1 ? strDeviceNames[2] : strDeviceNames), DeviceCode: o.DeviceCode };
                });
                $('#StationDevices').combobox('loadData', orgDevices);
            }
        });
    }

    function SendNoticeMsg(o) {
        $('#dlg-B132004').dialog(_.extend({
            inline: false,
            onOpen: function () {
                $('#fm-B132004').form('clear');
                var strBeginTime = (new Date()).pattern("yyyy-MM-dd HH:mm:ss");
                var strEndTime = DateAdd('n', 1, new Date()).pattern("yyyy-MM-dd HH:mm:ss");

                if (o) {
                    $('#fm-B132004').form('load', o);
                    $('#StationDevices').combobox('setValue', o.DeviceId);

                    strBeginTime = ndateFormatter($('#BeginSendTime').val(), 'yyyy-MM-dd HH:mm:ss');
                    strEndTime = ndateFormatter($('#lostEndTime').val(), 'yyyy-MM-dd HH:mm:ss')
                }
                else {
                    $('#fm-B132004').form('load', { Id: -1, NoticeType: 'text', NoticePosition: 'home' });
                }

                $('#BeginSendTime').val(strBeginTime);
                $('#lostEndTime').val(strEndTime);
            },
            modal: true
        }, null)).dialog('open').dialog('setTitle', '发送-消息通知');
    }

    function SendMsgSave() {
        var stationId = $('#CurrentAgencys').combobox('getValue');

        var strDeviceIds = $('#StationDevices').combobox('getValues');
        var strDeviceNames = $('#StationDevices').combobox('getText');
        if (!strDeviceIds) {
            alertInfo("请选择要发送的设备!");
        }

        var formData = $('#fm-B132004').serializeObject();
        if (!formData.EndTime) {
            alertInfo("请选择一个截止时间!");
        }
        var tmpEndTime = formData.EndTime;
        formData["BeginTime"] = toJsonDate(Date.parse(formData.BeginTime));
        formData["EndTime"] = toJsonDate(Date.parse(formData.EndTime));

        var formDataArray = _.map(strDeviceIds, function (o) {
            return _.extend(formData, { DeviceId: o, StationId: stationId, NoticeType: 'text', Status: 1 });
        });
        
        //发送消息
        if (Date.parse(tmpEndTime) < (new Date())) {
            alertInfo("已过截止时间,发送失败,请重新选定发送时间！");
        }
        else {
            var strMsg = { RemoteUrl: 'http://push.91stb.com/openapi/service/message',
                deviceid: strDeviceNames,
                msg_content: formData.NoticeContent,
                msg_type:formData.NoticeType, 
                position:formData.NoticePosition,
                exp_date: Date.parse(tmpEndTime).getTime()
            };

            //保存信息
            postTo(models[currentMenuCode].baseModelUrl + 'SaveMsgNotice', $.toJSON(formDataArray), function (ret) {
                if (ret.Success) {
                    postTo(top.baseCMSInvokeUrl + "/Share/CrossDomain/PushJuDouMsg", $.toJSON(strMsg), function (ret) {
                        if (ret.Success) {
                            alertInfo("发送成功!");
                            $('#' + models[currentMenuCode].gridId).datagrid('reload');
                            SendMsgCancel();
                        }
                    });
                }
            });
        }
        
    }

    function SendMsgCancel() {
        $('#dlg-B132004').dialog('close');
    }
</script>