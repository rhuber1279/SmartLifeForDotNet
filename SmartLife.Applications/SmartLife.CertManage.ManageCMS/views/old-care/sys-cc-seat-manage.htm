<div id="toolbar-B18110304">
    <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-add" plain="true"
        onclick="add()">新增</a> <a href="javascript:void(0)" class="easyui-linkbutton"
            iconcls="icon-edit" plain="true" onclick="edit()">编辑</a> <a href="javascript:void(0)"
                class="easyui-linkbutton" iconcls="icon-remove" plain="true" onclick="nullify()">
                作废</a><a href="javascript:void(0)"
                class="easyui-linkbutton" iconcls="icon-no" plain="true" onclick="stop()">
                停用</a><a href="javascript:void(0)"
                class="easyui-linkbutton" iconcls="icon-ok" plain="true" onclick="restart()">
                重新启用</a><a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-undo" plain="true" onclick="RePwd()">
                重置密码</a><a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-tip" plain="true" onclick="SetSysOperArea()">
                设置辖区</a>
</div>
<table id="dg-B18110304" >
</table>
<div id="dlg-B18110304" class="easyui-dialog" style="width: 360px; height: 300px; padding: 10px;"
 closed="true" cache="false" buttons="#btn-B18110304"  >
    <div class="ftitle"></div>
    <form id="fm-B18110304" method="post" novalidate>
    <input type="hidden" name="UserId" id="userid-B18110304" />
    <div class="fitem">
        <label>
            工　　号:</label>
        <input name="UserCode" class="easyui-validatebox" required="true" missingMessage="工号不能为空" /> 
    </div>
    <div class="fitem">
        <label>
            名　　称:</label>
        <input name="UserName" class="easyui-validatebox"  required="true" missingMessage="名称不能为空" />
    </div>
    <div class="fitem">
        <label>
            性　　别:</label>
        <input id="Gender-M" type="radio" name="Gender" value="M"/><label for="Gender-M">男</label>
        <input id="Gender-F" type="radio" name="Gender" value="F"/><label for="Gender-F">女</label>
    </div>
    <div class="fitem">
        <label>
            坐席队列:</label>
        <input id="GroupId" name="GroupId" class="easyui-validatebox"   /> 
    </div>
    </form>
</div>
<div id="btn-B18110304">
    <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" onclick="save()">
        确定</a> <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel"
            onclick="cancel()">取消</a>
</div> 
<script type="text/javascript">
    $(function () {
        var currentGroupType = getQueryStringInTab("GroupType");
        models[currentMenuCode] = {
            gridId: 'dg-' + currentMenuCode,
            toolbarId: 'toolbar-' + currentMenuCode,
            dialogId: 'dlg-' + currentMenuCode,
            formId: 'fm-' + currentMenuCode,
            buttonId: 'btn-' + currentMenuCode,
            pkId: 'userid-' + currentMenuCode,
            pk: 'UserId',
            dialogOption: {
                onBeforeOpen: function () {
                    var userId = $('#userid-B18110304').val();
                    if (!userId) {
                        userId = window.contants.guidAutoGenerate;
                    }
                    getTo(models[currentMenuCode].baseModelUrl + 'GetGroup/' + userId, null, function (result) {
                        $('#GroupId').combobox('setValues', result);
                        _.each(result, function (o) {
                            $('#GroupId_' + o).prop('checked', true);
                        });
                    }, { async: false });
                }
            },
            getPKValueWhenAdd: function () {
                return window.contants.guidAutoGenerate;
            },
            changeFormDataBeforeSubmit: function (formData) {
                formData["UserType"] = "00099|";
                if (formData.GroupId) {
                    formData["UserType"] += formData.GroupId;
                }
                formData["Area1"] = models[currentMenuCode].defaultModel.AreaId;
            },
            uiMode: 'list',
            entityName: '系统操作员',
            baseModelUrl: baseCMSInvokeUrl + '/Pub/UserService/',
            defaultModel: { AreaId: (top.objectId == '*' ? '00000' : top.appDeployArea.id), Gender: 'N', SystemFlag: 0, Status: 1 }
        };
        autosize(models[currentMenuCode].gridId);
        var groups = null;
        getTo(ajaxData_InvokeUrl + '/GetGroup?GroupType=' + currentGroupType, null, function (result) {
            groups = result;

        }, { async: false });
        var groupIdStrings = _.map(groups, function (o) {
            return o.GroupId;
        }).join();

        $('#' + models[currentMenuCode].gridId).datagrid(easyuigrid_settings({
            title: "",
            pagination: true,
            rownumbers: true,
            singleSelect: false,
            url: models[currentMenuCode].baseModelUrl + 'ListForEasyUIgrid',
            method: 'POST',
            toolbar: '#' + models[currentMenuCode].toolbarId,
            queryParams: {
                sort: 'UserCode',
                order: 'asc',
                instance: {
                    Area1: models[currentMenuCode].defaultModel.AreaId,
                    Status: models[currentMenuCode].defaultModel.Status,
                    UserType: "00099|" + groupIdStrings,
                    SystemFlag: models[currentMenuCode].defaultModel.SystemFlag
                }
            },
            onDblClickRow: function (idx, row) {
                edit(row);
            },
            columns: [[
        { field: 'UserId', title: '坐席编号', width: 150, hidden: true },
        { field: 'CK', title: '', checkbox: true },
        { field: 'UserCode', title: '工号', width: 100, sortable: true },
        { field: 'UserName', title: '名称', width: 200 },
            /*
            { field: 'GroupId', title: '队列', width: 200, formatter: easyuigrid_ajaxFormatter, url: function (row) {
            var url = window.ajaxData_InvokeUrl + '/GetNameString';
            alert(row.UserId);
            var results = null;
            getTo(url, { ColumnName: 'cast(GroupId as char(36))', TableName: 'Pub_GroupMember', WhereClause: "UserId='" + row.UserId + "'" }, function (result) {
            results = result;
            }, { async: false });
            return results;
            }
            },
            */
        {field: 'Gender', title: '性别', width: 50, align: 'center', formatter: easyuigrid_genderFormatter },
        { field: 'StopFlag', title: '停用', width: 50, align: 'center', formatter: easyuigrid_boolFormatter },
        { field: 'CheckInTime', title: '录入时间', width: 135, align: 'center', formatter: easyuigrid_dateFormatter, datefmt: "yyyy-MM-dd HH:mm:ss" }
    ]],
            loader: easyuiLoader
        })).datagrid('getPager').pagination({ displayMsg: '显示 第 {from} 到 {to} 共 {total} 条' });

        $('#GroupId').combobox({
            width: 240,
            panelHeight: 160,
            required: false,
            data: groups,
            valueField: 'GroupId',
            textField: 'GroupName',
            editable: false,
            multiple: true,
            onSelect: function (row) {
                $('#GroupId_' + row.GroupId).prop('checked', true);
            },
            onUnselect: function (row) {
                $('#GroupId_' + row.GroupId).prop('checked', false);
            },
            formatter: function (row) {
                var htmls = [];
                htmls.push('<input type="checkbox" align="absmiddle" id="GroupId_' + row.GroupId + '" >' + row.GroupName);
                return htmls.join("");
            }
        });
    });

    function RePwd() {
        var row = $('#' + models[currentMenuCode].gridId).datagrid('getSelected');
        if (row) {
            alertConfirm('确定要重置密码吗？', function (OK) {
                if (OK) { 
                    postTo(models[currentMenuCode].baseModelUrl + 'RePwd/' + row.UserId).done(function () {
                    alertInfo('重置密码成功！');
                    })
                }
            })
            
        } else {
            alertInfo('请选中要重置密码的用户！');
        }
    };

    function SetSysOperArea() {
        var row = $('#' + models[currentMenuCode].gridId).datagrid('getSelected');
        if (row) {
            getTo(models[currentMenuCode].baseModelUrl + 'GetArea/' + row.UserId).done(function (ret) {
                openDialog('set-user-area-sys-oper', 'views/dialogs/set-user-area.htm', function (callback, dialogData) {
                    var node = dialogData;
                    if (node) {
                        var levels = node.attributes.Levels;
                        if (levels > 1) {
                            //保存
                            postTo(models[currentMenuCode].baseModelUrl + '/SetArea/' + row.UserId + ',' + node.id).done(function () {
                                alertInfo('设置辖区成功！');
                                callback();
                            });
                        }
                        else {
                            alertInfo('不能选择省、市级辖区！');
                        }
                    }
                    else {
                        alertInfo('请选择一个辖区！');
                    }
                }, { dialogData: ret, title: '系统操作员-设置辖区 (' + row.UserName + ')', width: 480, height: 500, padding: 5, mergeDefault: true });
            });
        }
        else {
            alertInfo('请选中要设置辖区的系统操作员！');
        }
    } 
    
    
</script>