<table  style=" height:330px; padding:5px;">
    <tr>
        <td style="width: 150px; " valign="top">
            <div style="line-height: 30px; width: 100%; text-align: center; border-left: solid 1px #ddd;
                border-top: solid 1px #ddd; border-right: solid 1px #ddd; background-color: #fafafa;">
                楼层房间
            </div>
            <div id="div_tree" style="border: solid 1px #ddd; width: 100%;height:297px; float: left; overflow: auto;">
            <ul id="tree-room">
            </ul> 
                <input id="RoomNo" name="RoomNo"  type="hidden"/>
                <input id="FloorNo" name="FloorNo" type="hidden"/>
            </div>
        </td>
        <td valign="top">
            <div id="toolbar-oldman" > 
                <table width="100%">
                    <tr>
                        <td style="text-align:right;width: 40px;">
                            姓名：
                        </td>
                        <td style="text-align:left">
                            <input id="oldManName" class="easyui-validatebox"   /> 
                        </td>
                        <td style="width: 90px;">
                            <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-ok" onclick="execEx()">
                                查询</a>
                        </td>
                        <td style="width: 90px;">
                            <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" onclick="resetfmEx()">
                                清空</a>
                        </td> 
                    </tr>
                </table >
            </div>
        <table id="dg-oldman">
        </table></td>
    </tr>
</table> 
<div class="easyui-panel" title="设置工作项"  style="border: 1px solid #888; width:768px; height:125px;">
<input id="StationId" type="hidden"/>
<input id="UserId" type="hidden"/>
    <input id="dateNow" type="hidden" />
    <table style=" margin:auto auto auto auto;">
        <tr style=" height:40px;">
            <td><label> 工作项目：</label><input id="WorkItemS" style=" width:100px"/> </td>
            <td><label> 用时(分)：</label><input id="Workload" style=" width:60px" onkeyup="value=value.replace(/[^\d]/g,'')"/> </td>
            <td><label> 注意事项：</label><input id="Remark" style=" width:100px"/> </td>
            <td><label> 提醒标识：</label><input id="RemindFlagS" style=" width:50px"/> </td>
            <td><label> 提醒次数：</label><input id="RemindRepeats" style=" width:50px" onkeyup="value=value.replace(/[^\d]/g,'')"/> </td>
        </tr>
        <tr style=" height:40px;">
            <td><label> 生效日期：</label><input id="ServerBeginTime"  class="Wdate" style=" width:100px" onfocus="WdatePicker({dateFmt:'yyyy-MM-dd',minDate:'#F{$dp.$D(\'dateNow\')}'})"/> </td>
            <td><label> 计划时间：</label><input id="PlanSchedule"class="easyui-timespinner" style=" width:60px; " /> </td> 
            <td><label> 计划周期：</label><input id="PlanPeriodS"  style=" width:100px"/> </td>
            <td><label> 播报次数：</label><input id="PlayRepeats" style=" width:50px" /> </td>
            <td> 
        <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-reload" 
                plain="true"  style=" margin-right:5px; float:right;" 
            onclick="resetPlan()">重置</a> </td>
        </tr>
    </table> 
</div>
<script type="text/javascript">
    function dialogOpen(dialogId, dialogData) {
        //        alert($.toJSON(dialogData));
        $('#StationId').val(dialogData.StationId);
        $('#UserId').val(dialogData.UserId);
        var areas;

        var currentMenuCode = ''; 
        models[currentMenuCode] = {
            treeId: 'tree-room', 
            gridOldId: 'dg-oldman',
            toolbarOldId: 'toolbar-oldman',
            baseRoomModelUrl: baseCMSInvokeUrl + '/Pam/RoomService',
            baseOldModelUrl: baseCMSInvokeUrl + '/Pam/PensionAgencyObjectBaseInfoService/', 
            defaultModel: { AreaId: (top.objectId == '*' ? '00000' : top.appDeployArea.id), UserType: "00004|" + window.contants.GuidAsGroup_PensionAgencyServeMan, Status: 1, StationId: dialogData.StationId }
        };

        var stationId = dialogData.StationId;
        initTree('easyUITree', models[currentMenuCode].treeId, {
            onClick: function (treeNode) {
                var _filterFields = [{ key: 'Status', value: models[currentMenuCode].defaultModel.Status },
                { key: 'AreaId', value: models[currentMenuCode].defaultModel.AreaId },
                { key: 'StationId', value: models[currentMenuCode].defaultModel.StationId },
                { key: 'UserId', value: $('#UserId').val() },
                { key: 'isMapping', value: 0 }
                ];
                if (treeNode.attributes.PId == "_") {
                    $('#FloorNo').val(null);
                    $('#RoomNo').val(null);
                }
                else if (treeNode.attributes.PId == models[currentMenuCode].defaultModel.StationId) {
                    _filterFields.push({ key: 'FloorNo', value: treeNode.id });
                    $('#FloorNo').val(treeNode.id);
                    $('#RoomNo').val(null);
                }
                else {
                    _filterFields.push({ key: 'RoomId', value: treeNode.id });
                    $('#FloorNo').val(null);
                    $('#RoomNo').val(treeNode.id);
                }
                $('#' + models[currentMenuCode].gridOldId).datagrid('reload', {
                    sort: 'OldManName',
                    order: 'asc',
                    fuzzyFieldOP: ' or ',
                    filterFields: _filterFields
                });
            },
            onLoadSuccess: function () {
                //左边的树，默认展开一级
                var node = $('#' + models[currentMenuCode].treeId).tree('getRoot');
                $('#' + models[currentMenuCode].treeId).tree("collapseAll");
                $('#' + models[currentMenuCode].treeId).tree('expand', node.target);
            }
        },
            function (d) {
                getTreeData('01$01$10', "OrderNo asc", '{"StationId":"' + stationId + '" }', d);
            },
            null,
            function (treeObj) {
                $('#' + models[currentMenuCode].gridOldId).datagrid(easyuigrid_settings({
                    title: "",
                    width: 615,
                    height: 330,
                    pagination: true,
                    rownumbers: true,
                    singleSelect: false,
                    url: models[currentMenuCode].baseOldModelUrl + 'ListOldManLivingInRoom',
                    method: 'POST',
                    toolbar: '#' + models[currentMenuCode].toolbarOldId,
                    queryParams: {
                        sort: 'OldManName',
                        order: 'asc',
                        fuzzyFieldOP: ' or ',
                        filterFields: [{ key: 'Status', value: models[currentMenuCode].defaultModel.Status },
                { key: 'AreaId', value: models[currentMenuCode].defaultModel.AreaId },
                { key: 'StationId', value: models[currentMenuCode].defaultModel.StationId },
                { key: 'isMapping', value: 0 }
                ]
                    },
                    columns: [[
                { field: 'OldManId', title: '老人编号', width: 150, hidden: true },
                { field: 'OldManName', title: '姓名', width: 60, align: 'center' },
                { field: 'IDNo', title: '身份证', width: 150, align: 'center', formatter: easyuigrid_IDNo },
                { field: 'Gender', title: '性别', width: 50, align: 'center', formatter: easyuigrid_genderFormatter },
                { field: 'RoomNo', title: '房间号', width: 60, align: 'center', sortable: true },
                { field: 'ExtNo', title: '分机号', width: 80 },
                { field: 'HealthInsuranceFlag', title: '医保', width: 50, align: 'center', formatter: easyuigrid_bool2Formatter, vals: '无:0~t有:1' },
                { field: 'SocialInsuranceFlag', title: '社保', width: 50, align: 'center', formatter: easyuigrid_bool2Formatter, vals: '无:0~t有:1' },
                { field: 'Address', title: '家庭地址', width: 250 }
        ]],
                    loader: easyuiLoaderForStringObjectDictionary
                })).datagrid('getPager').pagination({ displayMsg: '显示 第 {from} 到 {to} 共 {total} 条' });

            });             //end loadTree  
            resetPlan();

            
    }
    function savePlan() { 
        var userId = $('#UserId').val();
        var rows = $('#dg-oldman').datagrid('getSelections');
        var workload = $('#Workload').val(); 
        if (isPass(userId, workload, rows) == "true") {
            var param = {
                PlanId: window.contants.guidAutoGenerate,
                UserId: userId, 
                Workload: workload,
                WorkItem: $('#WorkItemS').combobox('getValue'),
                RemindFlag: $('#RemindFlagS').combobox('getValue'), 
                PlanPeriod: $('#PlanPeriodS').combobox('getValue'),
                PlanSchedule: $('#PlanSchedule').val(),
                PlayRepeats: $('#PlayRepeats').combobox('getValue'), 
                Remark: $('#Remark').val()
            };
            var serverBeginTime = $('#ServerBeginTime').val();
            if (serverBeginTime && serverBeginTime != '') {
                serverBeginTime = new Date((serverBeginTime + ' 00:00:00').replace(/-/g, '/'));
                param["ServerBeginTime"] = toJsonDate(serverBeginTime);
            }
            var remindFlag = $('#RemindFlagS').combobox('getValue'); 
            if (remindFlag == '1') { param["RemindRepeats"] = $('#RemindRepeats').val(); } 

            
            var oldManIds = _.map(rows, function (o) {
                return o.OldManId;
            }).join("|"); 
            alertConfirm('确定保存这项工作计划吗？', function (r) {
                if (r) {
                    postTo(baseCMSInvokeUrl + '/Pam/WorkPlanService/CreateWorkPlanS/' + oldManIds, $.toJSON(param), function (ret) {
                        if (ret.Success) {
                            alert("保存成功");
                            //                        resetPlan();
                        }
                    });
                }
            });
        }
        else {
            alert(isPass(userId, workload , rows));
        }
    }
    function savePlanOut() { 
        var userId = $('#UserId').val();
        var rows = $('#dg-oldman').datagrid('getSelections');
        var workload = $('#Workload').val(); 
        if (isPass(userId, workload, rows) == "true") {
            var param = {
                PlanId: window.contants.guidAutoGenerate,
                UserId: userId, 
                Workload: workload,
                WorkItem: $('#WorkItemS').combobox('getValue'),
                RemindFlag: $('#RemindFlagS').combobox('getValue'), 
                PlanPeriod: $('#PlanPeriodS').combobox('getValue'),
                PlanSchedule: $('#PlanSchedule').val(),
                PlayRepeats: $('#PlayRepeats').combobox('getValue'), 
                Remark: $('#Remark').val()
            };
            var serverBeginTime = $('#ServerBeginTime').val();
            if (serverBeginTime && serverBeginTime != '') {
                serverBeginTime = new Date((serverBeginTime + ' 00:00:00').replace(/-/g, '/'));
                param["ServerBeginTime"] = toJsonDate(serverBeginTime);
            }
            var remindFlag = $('#RemindFlagS').combobox('getValue'); 
            if (remindFlag == '1') { param["RemindRepeats"] = $('#RemindRepeats').val(); }  
            
            var oldManIds = _.map(rows, function (o) {
                return o.OldManId;
            }).join("|"); 
            alertConfirm('确定保存这项工作计划吗？', function (r) {
                if (r) {
                    postTo(baseCMSInvokeUrl + '/Pam/WorkPlanService/CreateWorkPlanS/' + oldManIds, $.toJSON(param), function (ret) {
                        if (ret.Success) {
                            alert("保存成功");
                            $('#set-plan-add').dialog('close');
                            //                        resetPlan();
                        }
                    });
                }
            });
        }
        else {
            alert(isPass(userId, workload , rows));
        }
    }

    function resetPlan() {
        $('#Workload').val(null);
        $('#RemindRepeats').val(3); 
        $('#Remark').val(null);
        var d = new Date();
        $('#dateNow').val(d.getFullYear() + '-' + (d.getMonth() + 1) + '-' + d.getDate());
        $('#ServerBeginTime').val( $('#dateNow').val());
        getAll([ajaxData_InvokeUrl + '/GetDictionaryItem/13001',
        ajaxData_InvokeUrl + '/GetDictionaryItem/13002'], function (workItem_d, planPeriod_d) { 
            var v1 = workItem_d.length > 0 ? workItem_d[0].ItemId : '';
            var v2 = planPeriod_d.length > 0 ? planPeriod_d[0].ItemId : '';
            setCombobox("WorkItemS", workItem_d, 102, 100, v1);
            setCombobox("PlanPeriodS", planPeriod_d, 102, 82, v2);
            var d = new Date();
            $('#PlanSchedule').timespinner('setValue', d.getHours() + ':00');         

        });
        setCombobox("PlayRepeats", [{ ItemId: "1", ItemName: "1" }, { ItemId: "2", ItemName: "2" }, { ItemId: "3", ItemName: "3"}], 52, 65, 2); 
        setCombobox("PlayRepeats", [{ ItemId: "1", ItemName: "1" }, { ItemId: "2", ItemName: "2" }, { ItemId: "3", ItemName: "3"}], 52, 65, 2); 
        $('#RemindFlagS').combobox({
            width: 52,
            panelHeight: 42,
            onSelect: function (record) {
                if (record.ItemId == '0') {
                    $('#RemindRepeats').attr('disabled', 'disabled');
                    $('#PlayRepeats').combobox({ disabled: true });
                }
                else if (record.ItemId == '1') {
                    $('#RemindRepeats').removeAttr('disabled', 'disabled');
                    $('#RemindRepeats').val(3);
                    $('#PlayRepeats').combobox({ disabled: false });
                }
            },
            method: 'get',
            data: [{ ItemId: "0", ItemName: "否" }, { ItemId: "1", ItemName: "是"}],
            valueField: 'ItemId',
            textField: 'ItemName',
            editable: false,
            value: 1
        });
    }

    function isPass(userId, workload , rows) {
        var result = 'flase';
        if (userId&&userId!='') {
            if (rows && rows.length) {
                if (workload && workload != '') {
                    result = 'true';
                }
                else {
                    result = '服务用时为空，请填写服务用时';
                }
            }
            else {
                result = '老人为空，请选择';
            }
        }
        else {
            result = '服务人员为空，请重新选择';
        }
        return result;
    }
    function setCombobox(controlsId, data, w, h, v) { 
        $('#' + controlsId + '').combobox({
            width: w,
            panelHeight: h,
            method: 'get',
            data: data,
            valueField: 'ItemId',
            textField: 'ItemName',
            editable: false,
            value: v
        });
    }

    function execEx() { 
                var _filterFields = [{ key: 'Status', value: 1 },
                { key: 'AreaId', value: (top.objectId == '*' ? '00000' : top.appDeployArea.id) },
                { key: 'StationId', value: $('#StationId').val() },
                { key: 'isMapping', value: 0 }
                ];
                var floorNo = $('#FloorNo').val();
                var roomNo = $('#RoomNo').val();
                if (floorNo&&floorNo != "") {
                    _filterFields.push({ key: 'FloorNo', value: floorNo });  
                }
                if (roomNo && roomNo!="") {
                    _filterFields.push({ key: 'RoomNo', value: roomNo }); 
                }
                $('#dg-oldman').datagrid('reload', {
                    sort: 'OldManName',
                    order: 'asc',
                    fuzzyFieldOP: ' or ',
                    filterFields: _filterFields,
                    fuzzyFields: [{ key: 'OldManName', value: $('#oldManName').val() },
                    { key: 'InputCode1', value: $('#oldManName').val() },
                    { key: 'InputCode2', value: $('#oldManName').val()}]
                });
    
    }

    function resetfmEx() {
        $('#oldManName').val(null);
    }

    function dialogBeforeSubmit() {
        return true;
    }
    function closeDialogFrom() {
        $('#set-plan-add').dialog('close');
    }
    function dialogClose() { 
        return true;
    }
</script>
