<table id="cc-B11040603" style="width: 100%; height: 100%;">
    <tr>
        <td style="width: 200px;" valign="top">
            <ul id="tree-B11040603">
            </ul>
        </td>
        <td valign="top">
            <div id="toolbar-B11040603">
                <a behaviorcode="10" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search"
                    plain="true" onclick="query()">高级查询</a> <a behaviorcode="01" href="javascript:void(0)"
                        class="easyui-linkbutton" iconcls="icon-add" plain="true" onclick="add2()">新增</a>
                <a behaviorcode="02" href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-edit"
                    plain="true" onclick="edit()">编辑</a> <a behaviorcode="03" href="javascript:void(0)"
                        class="easyui-linkbutton" iconcls="icon-remove" plain="true" onclick="remove_refTree()">
                        删除</a>
                        <!--<a href="javascript:void(0)" id="mb" class="easyui-menubutton" data-options="menu:'#mm'">其他</a>
                <div id="mm" style="width: 50px">
                    <div behaviorcode="05" id="residentUpdate" iconcls="icon-upload" plain="true">
                        导入</div>
                </div>-->
            </div>
            <table id="dg-B11040603">
            </table>
        </td>
    </tr>
</table>
<!--新增页-->
<div id="dlg2-B11040603" class="easyui-dialog" style="width: 1150px; height: 550px;" 
closed="true" cache="false" buttons="#btn2-B11040603"> 
    <table id="Table1" style="width: 100%; height: 100%;">
        <tr>
        <td style="width: 200px;height:100%" valign="top">
            <div style="width:96%;height:98%;padding:3px; overflow:auto">
                <ul id="tree2-B11040603">
                </ul>
            </div>
        </td>
        <td valign="top" style=" width:400px;height:100%;padding:3px;">
            <table id="dg-ObjectCanAssign">
            </table>
        </td>
        <td style="width:30px;padding:3px;height:100%;">
            <table>
                <tr><td><a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-selectall" plain="true" onclick="assignAll()"></a></td></tr>
                <tr><td><a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-selectone" plain="true" onclick="assignSelected()"></a></td></tr>
                <!--<tr><td><a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-deselectone" plain="true" onclick="unAssignSelected()"></a></td></tr>
                <tr><td><a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-deselectall" plain="true" onclick="unAssignAll()"></a></td></tr>-->
            </table> 
        </td>
        <td style=" width:450px;padding:3px; height:100%;padding:3px;" valign="top">
            <table id="dg-ObjectAssigned">
            </table>
        </td>
        </tr>
    </table>
</div>
<!--<div id="btn2-B11040603">
    <a href="javascript:void(0)" id="add_btn" class="easyui-linkbutton" iconcls="icon-ok" onclick="save()">
        确定</a> <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel"
            onclick="cancel2()">取消</a>
</div>-->

<!--编辑页-->
<div id="dlg-B11040603" class="easyui-dialog" style="width: 650px; height: 330px; padding: 10px;"
    closed="true" cache="false" buttons="#btn-B11040603">
    <div class="ftitle"></div><!--副标题会替换标题-->
    <input type="hidden"  id="tableNameId" /><!--必须放在form外，否则会被清除-->
    <form id="fm-B11040603" method="post" novalidate>
        <input type="hidden" name="ColumnName"  id="columnName-B11040603" />
        <div class="fitem">
            <label>列　　　名:</label>
            <input name="ColumnName" class="easyui-validatebox" required="true" missingmessage="列名不能为空" style=" width:200px" disabled="disabled" />
            <label>中文名称　:</label>
            <input name="ColumnCName" class="easyui-validatebox" required="true" missingmessage="中文名称不能为空" style=" width:200px" />
        </div>
        <div class="fitem">
            <label>表　　　名:</label>
            <input name="TableName" class="easyui-validatebox" required="true" missingmessage="表名不能为空" style=" width:200px"  disabled="disabled" />
             <label>取值方式　:</label>
            <input id="ValueType" name="ValueType" class="easyui-validatebox" />
        </div>
        <div class="fitem">
            <label>列取值设置:</label>
            <input name="ValueOption" class="easyui-validatebox" style=" width:200px" />
             <label>泛数据类型:</label>
            <input id="GenericDataType" name="GenericDataType" class="easyui-validatebox" />
        </div>
        <div class="fitem">
            <label>默　认　值:</label>
            <input name="DefaultValue" class="easyui-validatebox" style=" width:200px" />
        </div>
        <div class="fitem">
             <label>主键标志　:</label>
            <input type="radio" name="PrimaryKeyFlag" value="0" /><label >否</label>
            <input type="radio" name="PrimaryKeyFlag" value="1" /><label >是</label>
        </div>
        <div class="fitem">
            <label>为空标志　:</label>
            <input type="radio" name="NullFlag" value="0" /><label >否</label>
            <input type="radio" name="NullFlag" value="1" /><label >是</label>
        </div>
    </form>
</div>
<div id="btn-B11040603">
    <a href="javascript:void(0)" id="edit_btn" class="easyui-linkbutton" iconcls="icon-ok" onclick="save()">
        确定</a> <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel"
            onclick="cancel()">取消</a>
</div>

<div id="dlg-search-B11040603" class="easyui-dialog" style="width: 420px; height: 200px;
    padding: 10px;" closed="true" cache="false" buttons="#btn-search-B11040603">
    <div class="ftitle">
    </div>
    <form id="fm-search-B11040603" method="post" novalidate>
    <div class="fitem">
        <label>
            姓 名:</label>
        <input name="ResidentName">
    </div>
    <div class="fitem">
        <label>
            身份证:</label>
        <input name="IDNo">
    </div>
    </form>
</div>
<div id="btn-search-B11040603">
    <a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-search" onclick="exec()">
        查询</a> <a href="javascript:void(0)" class="easyui-linkbutton" onclick="clear()">清空</a>
    <!--<a href="javascript:void(0)" class="easyui-linkbutton" iconcls="icon-cancel" onclick="quit()">关闭</a>-->
</div>
<script type="text/javascript">
    var valuetype;
    var genericDataType;

    $(function () {
        models[currentMenuCode] = {
            treeId: 'tree-' + currentMenuCode,
            gridId: 'dg-' + currentMenuCode,
            toolbarId: 'toolbar-' + currentMenuCode,
            dialogId: 'dlg-' + currentMenuCode,
            dialogUploadId: 'dlg-upload-' + currentMenuCode,
            dlgSearchId: 'dlg-search-' + currentMenuCode,
            fmSearchId: 'fm-search-' + currentMenuCode,
            btnSearchId: 'btn-search-' + currentMenuCode,
            formId: 'fm-' + currentMenuCode,
            buttonId: 'btn-' + currentMenuCode,
            pkId: 'columnName-' + currentMenuCode,//id
            pk: 'ColumnName',//name
            changeFormDataBeforeSubmit: function (formData) {

            },
            onBeforeDialogOpen: function (row) {

            },
            onAfterDialogOpen: function (row) {

            },
            //headers: { ConnectId: baseInfoNode },
            uiMode: 'list',
            entityName: '公共列',
            baseModelUrl: baseCMSInvokeUrl + '/Pub/SetColumnService/',
            baseEditModelUrl: function () { return this.baseModelUrl + $('#tableNameId').val() + ','; },
            defaultModel: { AreaId: (top.objectId == '*' ? '00000' : top.appDeployArea.id), Status: 1 }
            //defaultModelWhenAdd: {  }
        };

        bindCombo();

        autosize("cc-B11040603");

        initTree('easyUITree', models[currentMenuCode].treeId, {
            onClick: function (treeNode) {
                $("#tableNameId").val(treeNode.text);
                var tempfilter = [
                //{ key: 'Status', value: models[currentMenuCode].defaultModel.Status }
                ];
                if (treeNode.id != "00" && treeNode.id != "*") {
                    tempfilter.push({ key: 'TableName', value: treeNode.text });
                }
                $('#' + models[currentMenuCode].gridId).datagrid({ url: models[currentMenuCode].baseModelUrl + 'ListForEasyUIgrid'
                    , queryParams: {
                        sort: 'OperatedOn',
                        order: 'desc',
                        filterFields: tempfilter
                    }
                });
                //采用开始时不加载数据，点树后在加载故注释一下代码
                //                $('#' + models[currentMenuCode].gridId).datagrid('load', {
                //                    sort: 'OperatedOn',
                //                    order: 'desc',
                //                    filterFields: tempfilter
                //                });
            }
        },
        function (d) {
            getTreeData('01$03$01', null, null, d);
        },
        null,
        function (treeObj) {
            var node = treeObj.tree("getSelected");
            createGrid();
        }); //end loadTree
        
    });

    /***********$(function ()外方法**************/
    function createGrid() {
        $('#' + models[currentMenuCode].gridId).datagrid(easyuigrid_settings({
            title: "",
            fit: true,
            pagination: true,
            rownumbers: true,
            singleSelect: false,
            //url: models[currentMenuCode].baseModelUrl + 'ListForEasyUIgrid',
            method: 'POST',
            toolbar: '#' + models[currentMenuCode].toolbarId,
            queryParams: {
                sort: 'OperatedOn',
                order: 'desc',
                filterFields: [
                    { key: 'Status', value: models[currentMenuCode].defaultModel.Status },
                    { key: 'TableName', value: "" }
                ]
            },
            onDblClickRow: function (idx, row) {
                //$("#tableNameId").val(row.TableName);
                edit(row);
            },
            columns: [[
                    { field: 'CK', title: '', checkbox: true },
                    { field: 'ColumnName', title: '列名', width: 150, align: 'left' },
                    { field: 'Id', title: 'Id', width: 100, hidden: true },
                    { field: 'ColumnCName', title: '中文名', width: 120, align: 'left' },
                    { field: 'TableName', title: '表名', width: 150, align: 'left' },
                    { field: 'ValueType', title: '取值方式', width: 80, align: 'center', formatter: easyuigrid_ajaxFormatter, vals: valuetype },
                    { field: 'ValueOption', title: '取值设置', width: 80, align: 'center' },
                    { field: 'GenericDataType', title: '泛数据类型', align: 'center', width: 100, formatter: easyuigrid_ajaxFormatter, vals: genericDataType },
                    { field: 'DefaultValue', title: '默认值', align: 'center', width: 150, align: 'left' },
                    { field: 'PrimaryKeyFlag', title: '主键标志', align: 'center', formatter: easyuigrid_boolFormatter },
                    { field: 'NullFlag', title: '为空标志', align: 'center', formatter: easyuigrid_boolFormatter },
                    { field: 'CheckInTime', title: '创建时间 ', width: 100, align: 'center', formatter: easyuigrid_dateFormatter },
                    { field: 'Status', title: '状态', width: 80, align: 'center', formatter: easyuigrid_statusFormatter }
            ]],
            loader: easyuiLoader
        })).datagrid('getPager').pagination({ displayMsg: '显示 第 {from} 到 {to} 共 {total} 条' });

        $('#' + models[currentMenuCode].gridId).datagrid({
            rowStyler: function (index, row) {
                if (row.Status == 0) {
                    return 'background-color:#FF6347;';
                }
            }
        });
    }

    function bindCombo() {
        getAll([ajaxData_InvokeUrl + '/GetDictionaryItem/00025',
                baseCMSInvokeUrl + '/Pub/SetColumnService/DBType'
                ], function (result_D00025, result) {
                    valuetype = result_D00025;
                    genericDataType = result.rows;
                    createGrid();
                    setCombobox("ValueType", result_D00025);
                    setCombobox("GenericDataType", result.rows);
                });
    }

    function setCombobox(controlsId, data) {
        $('#' + controlsId + '').combobox({
            width: 152,
            panelHeight: 80,
            method: 'get',
            data: data,
            valueField: 'ItemId',
            textField: 'ItemName',
            editable: false
        });
    }

    function add2() {
        //新增页面_原始表
        initTree('easyUITree', 'tree2-B11040603', {
            onClick: function (treeNode) {
                if (treeNode.id != "00" && treeNode.id != "*") {
                    gridReload(treeNode.text);
                }
            }
        },
        function (d) {
            getTreeData('01$03$02', null, null, d);
        },
        null,
        function (treeObj) {
            createUnselGrid();
            createSelGrid();
        }); //end loadTree
       
        getJQO('#dlg2-B11040603').dialog(_.extend({
            inline: false,
            onClose: function () {
                tree1Refresh();
            },
            modal: true
        }, null)).dialog('open').dialog('setTitle', '新增原始列');
    }

    function cancel2(){
        getJQO("#dlg2-B11040603").dialog('close');
    }

    //未选列表
    function createUnselGrid() {
        $('#dg-ObjectCanAssign').datagrid(easyuigrid_settings({
            title: "未选",
            fit: true,
            //pagination: false,
            rownumbers: true,
            singleSelect: false,
            url: models[currentMenuCode].baseModelUrl + 'DBColumnListForEasyUIgrid',
            method: 'POST',
            queryParams: {
                sort: 'ColumnName',
                order: 'asc',
                filterFields: [
                    { key: 'TableName', value: "" }
                ]
            },
            columns: [[
                    { field: 'CK', title: '', checkbox: true },
                    { field: 'ColumnName', title: '列名', width: 120, align: 'left' },
                    { field: 'ColumnCName', title: '注释', width: 120, align: 'left' },
                    { field: 'TableName', title: '表名', width: 120, align: 'left' }
            ]],
            //loader: easyuiLoaderForStringObjectDictionary
            loader: easyuiLoader
        }))//.datagrid('getPager').pagination({ displayMsg: '显示 第 {from} 到 {to} 共 {total} 条' });
    }
    
    //已选列表
    function createSelGrid() {
        $('#dg-ObjectAssigned').datagrid(easyuigrid_settings({
            title: "已选",
            fit: true,
            //pagination: false,
            rownumbers: true,
            singleSelect: true,
            url: models[currentMenuCode].baseModelUrl + 'ListForEasyUIgrid',
            method: 'POST',
            //toolbar: '#' + models[currentMenuCode].toolbarId,
            queryParams: {
                sort: 'Id',
                order: 'asc',
                filterFields: [
                    { key: 'TableName', value: "" }
                ]
            },
            columns: [[
                    { field: 'ColumnName', title: '列名', width: 120, align: 'left' },
                    { field: 'Id', title: 'Id', width: 100, hidden: true },
                    { field: 'ColumnCName', title: '中文名', width: 120, align: 'left' },
                    { field: 'TableName', title: '表名', width: 120, align: 'left' },
                    { field: 'Status', title: '状态', formatter: easyuigrid_statusFormatter }
            ]],
            loader: easyuiLoader
        }))//.datagrid('getPager').pagination({ displayMsg: '显示 第 {from} 到 {to} 共 {total} 条' });
    }

    function assignAll() {
        var rows = $('#dg-ObjectCanAssign').datagrid('getRows');
        if (rows.length > 0) {
            alertConfirm("确认插入该表所有列吗?", function (flag) {
                if (flag) {
                    var columnNames = [];
                    for (var i in rows) {
                        columnNames.push(rows[i].TableName + "." + rows[i].ColumnName);
                    }
                    var str_columnNames = columnNames.join(',');
                    postTo(models[currentMenuCode].baseModelUrl + 'Create2/' + str_columnNames, null, function (result) { 
                        if (result.Success) {
                            var treeNode=$("#tree2-B11040603").tree("getSelected");
                            gridReload(treeNode.text);
                            alertInfo('插入成功!');
                        }
                    }, { async: false });
                }
            });
        }
    }

    function assignSelected() {
        var rows = $('#dg-ObjectCanAssign').datagrid('getSelections');
        if (rows.length > 0) {
            alertConfirm("确认插入所选列吗?", function (flag) {
                if (flag) {
                    var columnNames = [];
                    for (var i in rows) {
                        columnNames.push(rows[i].TableName + "." + rows[i].ColumnName);
                    }
                    var str_columnNames = columnNames.join(',');
                    postTo(models[currentMenuCode].baseModelUrl + 'Create2/' + str_columnNames, null, function (result) {
                        if (result.Success) {
                            var treeNode = $("#tree2-B11040603").tree("getSelected");
                            gridReload(treeNode.text);
                            alertInfo('插入成功!');
                        } else {
                            alertError('插入失败!');
                        }
                    }, { async: false });
                }
            });
        } else {
            alertInfo('没有选中的对象！');
        }
    }
    var intervalId;
    function remove_refTree() {
        remove();
        intervalId = setInterval("removeOnAfterRefresh()", 2000);
        setTimeout(stopIntervalId, 10000);
    }
    function stopIntervalId(time) {
        clearInterval(intervalId);
    }
    function unAssignSelected() {
        var rows = $('#dg-ObjectAssigned').datagrid('getSelections');
        if (rows.length > 0) {
            var dataObjectAssigned = $('#dg-ObjectAssigned').datagrid('getRows');
            var dataObjectCanAssign = $('#dg-ObjectCanAssign').datagrid('getRows');
            $('#dg-ObjectCanAssign').datagrid('loadData', _.union(dataObjectCanAssign, rows));
            $('#dg-ObjectAssigned').datagrid('loadData', _.difference(dataObjectAssigned, rows));
        } else {
            alertInfo('没有选中的对象！');
        }
    }
    function unAssignAll() {
        var dataObjectCanAssign = $('#dg-ObjectCanAssign').datagrid('getRows');
        $('#dg-ObjectCanAssign').datagrid('loadData', _.union(dataObjectCanAssign, $('#dg-ObjectAssigned').datagrid('getRows')));
        $('#dg-ObjectAssigned').datagrid('loadData', []);
    }

    function gridReload(tableName) {
        $('#dg-ObjectCanAssign').datagrid('load', {
            sort: 'ColumnName',
            order: 'asc',
            filterFields: [
                { key: 'TableName', value: tableName }
            ]
        });
        $('#dg-ObjectAssigned').datagrid('load', {
            sort: 'ColumnName',
            order: 'asc',
            filterFields: [
                { key: 'TableName', value: tableName }
            ]
        });
    }

    function tree1Refresh() {
        var node = $("#" + models[currentMenuCode].treeId).tree("getSelected");
        refreshTree("easyUITree", models[currentMenuCode].treeId, '01$03$01');
        if (node) {
            $("#" + models[currentMenuCode].treeId).tree("select", node.target);
        }
    }

    function removeOnAfterRefresh() {
        getTreeData("01$03$01", null, null, function (nodes) {
            $('#' + models[currentMenuCode].treeId).tree('loadData', __getTreeNode(nodes, '_'));
        });
    }
</script>
